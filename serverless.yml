service: sf-assignment-pow
frameworkVersion: '3'
configValidationMode: error

provider:
  name: aws
  runtime: nodejs16.x
  stage: ${opt:stage, 'dev'}
  region: eu-west-1
  lambdaHashingVersion: 20201221
  memorySize: 256
  logRetentionInDays: 14
  timeout: 29
  environment:
    VOLTS_N_COINS_REDIS_URL: ${env:VOLTS_N_COINS_REDIS_URL, 'redis://localhost:6379'}
    VOLTS_N_COINS_BLOCKCHAIN_BASE_URL: ${env:VOLTS_N_COINS_BLOCKCHAIN_BASE_URL,'https://blockchain.info'}

    VOLTS_N_COINS_BLOCK_CACHE_INTERVAL_SECONDS: ${env:VOLTS_N_COINS_BLOCK_CACHE_INTERVAL_SECONDS, '14400'}
    VOLTS_N_COINS_BLOCK_CACHE_MAX_CONCURRENCY: ${env:VOLTS_N_COINS_BLOCK_CACHE_MAX_CONCURRENCY, '1000'}

    VOLTS_N_COINS_ENERGY_COST_PER_BYTE: ${env:VOLTS_N_COINS_ENERGY_COST_PER_BYTE, '4.56'}

plugins:
  - serverless-esbuild
  - serverless-offline

custom:
  esbuild:
    packager: yarn
    minify: false
    sourcemap: false
    target: node16
    watch:
      pattern: ['src/**/*.ts']
    external:
      - redis
  # This cron expression runs every 3 hours by default.
  blockCacheCron: ${env:VOLTS_N_COINS_BLOCK_CACHE_CRON, 'cron(0 */3 * * ? *)'}

functions:
  graphql:
    handler: src/fn_graphql.handler
    events:
      - httpApi: '*'
  blockCache:
    handler: src/blockCacheHandler.handler
    events:
      - schedule:
          rate: ${self:custom.blockCacheCron}
